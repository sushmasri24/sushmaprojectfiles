#!/bin/bash

# check if argument is provided
if [[ $# -eq 0 ]]; then
  echo "Error: missing argument. Please provide the number of folders to create."
  exit 1
fi

# check if argument is a number between 1 and 26
if ! [[ "$1" =~ ^[1-9]$|^1[0-9]$|^2[0-6]$ ]]; then
  echo "Error: argument must be a number between 1 and 26."
  exit 1
fi

# create folders
for (( i=0; i<$1; i++ )); do
  folder_name=$(printf "folder_%s" $(printf %c $((97+i))))
  mkdir $folder_name
done

# print summary
if [[ $1 -eq 1 ]]; then
  echo "1 folder created: folder_a"
else
  echo "$1 folders created:" $(printf "folder_%s, " $(printf %c $(seq 97 $((96+$1)))) | sed 's/,$//')
fi





#!/bin/bash

echo -e "\n NumberJack \n"
ch=0

while [ "$ch" -ne 3 ]; do
    echo "  
         PLAY : Hit 1 and enter.
         HELP : Hit 2 and enter.
         EXIT : Hit 3 and enter.
         "
    read -p "Enter your choice : " ch
    if [ "$ch" -eq 1 ]; then
        x=0; c=0; p=0
        read -p "Enter any number between 0 and 9 : " n
        while [ "$c" -eq 0 ]; do
            x=11; r=($(shuf -i 0-9 -n 10))
            echo "${r[*]} "
            a=()
            for i in {1..10}; do
                a[$i]=$i
            done
            echo "${a[*]} "
            read -t 5 -p "Enter the index of your number : " x
            if [[ "$?" -gt 128 ]]; then
                c=1
                break
            fi
            if [ "${r[$(($x - 1))]}" -eq "$n" ]; then
                echo "Great"
                ((p = p + 1))
            else
                c=1
                break
            fi
        done
    elif [ "$ch" -eq 2 ]; then
        echo "HELP: INSTRUCTIONS TO PLAY THE GAME. "
    else
        break
    fi
    if [ "$c" -eq 1 ]; then
        echo -e "\nGAME OVER\n"
        echo "You scored $p points"
    fi
done
